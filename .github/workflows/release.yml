name: Release and Publish

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version bump type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  release:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      id-token: write  # Required for npm provenance
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'
          
      - name: Configure git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run tests
        run: npm test
        
      - name: Build package
        run: npm run build
        
      - name: Bump version
        id: version
        run: |
          OLD_VERSION=$(node -p "require('./package.json').version")
          npm version ${{ github.event.inputs.version_type }} --no-git-tag-version
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "old_version=$OLD_VERSION" >> $GITHUB_OUTPUT
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "tag=v$NEW_VERSION" >> $GITHUB_OUTPUT
          
      - name: Commit version bump
        run: |
          git add package.json package-lock.json
          git commit -m "chore: bump version to ${{ steps.version.outputs.new_version }} [skip ci]"
          git push
          
      - name: Create and push tag
        run: |
          git tag ${{ steps.version.outputs.tag }}
          git push origin ${{ steps.version.outputs.tag }}
          
      - name: Verify package contents
        run: |
          npm pack --dry-run
          echo "Package size:"
          npm pack 2>/dev/null | tail -1 | awk '{print $NF}'
          
      - name: Publish to NPM
        run: npm publish --provenance --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          
      - name: Generate changelog
        id: changelog
        run: |
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "## Changes in v${{ steps.version.outputs.new_version }}" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo "### Installation" >> $GITHUB_OUTPUT
          echo "\`\`\`bash" >> $GITHUB_OUTPUT
          echo "npx puppeteer-mcp-claude install" >> $GITHUB_OUTPUT
          echo "\`\`\`" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo "### New Features" >> $GITHUB_OUTPUT
          echo "- Dual Claude Desktop & Code detection" >> $GITHUB_OUTPUT
          echo "- Cross-platform support (macOS, Linux, Windows)" >> $GITHUB_OUTPUT
          echo "- 11 browser automation tools" >> $GITHUB_OUTPUT
          echo "- One-command installation and setup" >> $GITHUB_OUTPUT
          echo "- Automatic configuration for all Claude apps" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo "### Latest Commits" >> $GITHUB_OUTPUT
          git log --oneline --since="$(git log -1 --format=%cd --date=iso ${{ steps.version.outputs.old_version }} 2>/dev/null || echo '1 week ago')" | head -10 | sed 's/^/- /' >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo "See the [README](https://github.com/jaenster/puppeteer-mcp-claude#readme) for full documentation." >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          
      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.tag }}
          release_name: Release ${{ steps.version.outputs.tag }}
          body: ${{ steps.changelog.outputs.changelog }}
          draft: false
          prerelease: false